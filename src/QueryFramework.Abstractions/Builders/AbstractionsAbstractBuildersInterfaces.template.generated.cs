// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 8.0.5
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#nullable enable
namespace QueryFramework.Abstractions.Builders
{
    public interface IDataObjectNameQueryBuilder : QueryFramework.Abstractions.Builders.IQueryBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        string DataObjectName
        {
            get;
            set;
        }
    }
    public interface IFieldSelectionQueryBuilder : QueryFramework.Abstractions.Builders.IQueryBuilder
    {
        bool Distinct
        {
            get;
            set;
        }

        bool GetAllFields
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        System.Collections.Generic.List<string> FieldNames
        {
            get;
            set;
        }
    }
    public interface IGroupingQueryBuilder : QueryFramework.Abstractions.Builders.IQueryBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.List<ExpressionFramework.Domain.Builders.ExpressionBuilder> GroupByFields
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        ExpressionFramework.Domain.Builders.Evaluatables.ComposedEvaluatableBuilder GroupByFilter
        {
            get;
            set;
        }
    }
    public interface IParameterizedQueryBuilder : QueryFramework.Abstractions.Builders.IQueryBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.List<QueryFramework.Abstractions.Builders.IQueryParameterBuilder> Parameters
        {
            get;
            set;
        }
    }
    public interface IQueryBuilder
    {
        System.Nullable<int> Limit
        {
            get;
            set;
        }

        System.Nullable<int> Offset
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        ExpressionFramework.Domain.Builders.Evaluatables.ComposedEvaluatableBuilder Filter
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        System.Collections.Generic.List<QueryFramework.Abstractions.Builders.IQuerySortOrderBuilder> OrderByFields
        {
            get;
            set;
        }

        QueryFramework.Abstractions.IQuery Build();
    }
    public interface IQueryParameterBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
            set;
        }

        object? Value
        {
            get;
            set;
        }

        QueryFramework.Abstractions.IQueryParameter Build();
    }
    public interface IQueryParameterValueBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        string Name
        {
            get;
            set;
        }

        QueryFramework.Abstractions.IQueryParameterValue Build();
    }
    public interface IQuerySortOrderBuilder
    {
        [System.ComponentModel.DataAnnotations.RequiredAttribute]
        [CrossCutting.Common.DataAnnotations.ValidateObjectAttribute]
        ExpressionFramework.Domain.Builders.ExpressionBuilder FieldNameExpression
        {
            get;
            set;
        }

        QueryFramework.Abstractions.Domains.QuerySortOrderDirection Order
        {
            get;
            set;
        }

        QueryFramework.Abstractions.IQuerySortOrder Build();
    }
    public interface ISingleEntityQueryBuilder : QueryFramework.Abstractions.Builders.IQueryBuilder
    {
    }
}
#nullable disable
