// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 5.0.13
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace QueryFramework.Core
{
#nullable enable
    public partial record QueryCondition : QueryFramework.Abstractions.IQueryCondition
    {
        public bool OpenBracket
        {
            get;
        }

        public bool CloseBracket
        {
            get;
        }

        public QueryFramework.Abstractions.IQueryExpression Field
        {
            get;
        }

        public QueryFramework.Abstractions.QueryOperator Operator
        {
            get;
        }

        public object? Value
        {
            get;
        }

        public QueryFramework.Abstractions.QueryCombination Combination
        {
            get;
        }

        public QueryCondition(bool openBracket, bool closeBracket, QueryFramework.Abstractions.IQueryExpression field, QueryFramework.Abstractions.QueryOperator @operator, object? value, QueryFramework.Abstractions.QueryCombination combination)
        {
            this.OpenBracket = openBracket;
            this.CloseBracket = closeBracket;
            this.Field = field;
            this.Operator = @operator;
            this.Value = value;
            this.Combination = combination;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record QueryExpression : QueryFramework.Abstractions.IQueryExpression
    {
        public string FieldName
        {
            get;
        }

        public QueryFramework.Abstractions.IQueryExpressionFunction? Function
        {
            get;
        }

        public QueryExpression(string fieldName, QueryFramework.Abstractions.IQueryExpressionFunction? function)
        {
            this.FieldName = fieldName;
            this.Function = function;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record QueryParameter : QueryFramework.Abstractions.IQueryParameter
    {
        public string Name
        {
            get;
        }

        public object Value
        {
            get;
        }

        public QueryParameter(string name, object value)
        {
            this.Name = name;
            this.Value = value;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record QueryParameterValue : QueryFramework.Abstractions.IQueryParameterValue
    {
        public string Name
        {
            get;
        }

        public QueryParameterValue(string name)
        {
            this.Name = name;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record QuerySortOrder : QueryFramework.Abstractions.IQuerySortOrder
    {
        public QueryFramework.Abstractions.IQueryExpression Field
        {
            get;
        }

        public QueryFramework.Abstractions.QuerySortOrderDirection Order
        {
            get;
        }

        public QuerySortOrder(QueryFramework.Abstractions.IQueryExpression field, QueryFramework.Abstractions.QuerySortOrderDirection order)
        {
            this.Field = field;
            this.Order = order;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore
}
