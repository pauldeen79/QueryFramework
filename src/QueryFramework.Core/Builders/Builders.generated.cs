// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 5.0.13
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace QueryFramework.Core.Builders
{
#nullable enable
    public partial class QueryConditionBuilder : QueryFramework.Abstractions.Builders.IQueryConditionBuilder
    {
        public bool OpenBracket
        {
            get;
            set;
        }

        public bool CloseBracket
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.Builders.IQueryExpressionBuilder Field
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.QueryOperator Operator
        {
            get;
            set;
        }

        public object? Value
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.QueryCombination Combination
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.IQueryCondition Build()
        {
            return new QueryFramework.Core.QueryCondition(OpenBracket, CloseBracket, Field.Build(), Operator, Value, Combination);
        }

        public QueryConditionBuilder WithOpenBracket(bool openBracket = true)
        {
            OpenBracket = openBracket;
            return this;
        }

        public QueryConditionBuilder WithCloseBracket(bool closeBracket = true)
        {
            CloseBracket = closeBracket;
            return this;
        }

        public QueryConditionBuilder WithField(QueryFramework.Abstractions.Builders.IQueryExpressionBuilder field)
        {
            Field = field;
            return this;
        }

        public QueryConditionBuilder WithOperator(QueryFramework.Abstractions.QueryOperator @operator)
        {
            Operator = @operator;
            return this;
        }

        public QueryConditionBuilder WithValue(object? value)
        {
            Value = value;
            return this;
        }

        public QueryConditionBuilder WithCombination(QueryFramework.Abstractions.QueryCombination combination)
        {
            Combination = combination;
            return this;
        }

        public QueryConditionBuilder()
        {
            OpenBracket = default;
            CloseBracket = default;
            Field = new QueryFramework.Core.Builders.QueryExpressionBuilder();
            Operator = default;
            Combination = default;
        }

        public QueryConditionBuilder(QueryFramework.Abstractions.IQueryCondition source)
        {
            OpenBracket = source.OpenBracket;
            CloseBracket = source.CloseBracket;
            Field = new QueryFramework.Core.Builders.QueryExpressionBuilder(source.Field);
            Operator = source.Operator;
            Value = source.Value;
            Combination = source.Combination;
        }
    }
#nullable restore

#nullable enable
    public partial class QueryExpressionBuilder : QueryFramework.Abstractions.Builders.IQueryExpressionBuilder
    {
        public string FieldName
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.Builders.IQueryExpressionFunctionBuilder? Function
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.IQueryExpression Build()
        {
            return new QueryFramework.Core.QueryExpression(FieldName, Function?.Build());
        }

        public QueryExpressionBuilder WithFieldName(string fieldName)
        {
            FieldName = fieldName;
            return this;
        }

        public QueryExpressionBuilder WithFunction(QueryFramework.Abstractions.Builders.IQueryExpressionFunctionBuilder? function)
        {
            Function = function;
            return this;
        }

        public QueryExpressionBuilder()
        {
            FieldName = string.Empty;
        }

        public QueryExpressionBuilder(QueryFramework.Abstractions.IQueryExpression source)
        {
            FieldName = source.FieldName;
            Function = source.Function?.ToBuilder();
        }
    }
#nullable restore

#nullable enable
    public partial class QueryParameterBuilder : QueryFramework.Abstractions.Builders.IQueryParameterBuilder
    {
        public string Name
        {
            get;
            set;
        }

        public object Value
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.IQueryParameter Build()
        {
            return new QueryFramework.Core.QueryParameter(Name, Value);
        }

        public QueryParameterBuilder WithName(string name)
        {
            Name = name;
            return this;
        }

        public QueryParameterBuilder WithValue(object value)
        {
            Value = value;
            return this;
        }

        public QueryParameterBuilder()
        {
            Name = string.Empty;
            Value = new object();
        }

        public QueryParameterBuilder(QueryFramework.Abstractions.IQueryParameter source)
        {
            Name = source.Name;
            Value = source.Value;
        }
    }
#nullable restore

#nullable enable
    public partial class QueryParameterValueBuilder : QueryFramework.Abstractions.Builders.IQueryParameterValueBuilder
    {
        public string Name
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.IQueryParameterValue Build()
        {
            return new QueryFramework.Core.QueryParameterValue(Name);
        }

        public QueryParameterValueBuilder WithName(string name)
        {
            Name = name;
            return this;
        }

        public QueryParameterValueBuilder()
        {
            Name = string.Empty;
        }

        public QueryParameterValueBuilder(QueryFramework.Abstractions.IQueryParameterValue source)
        {
            Name = source.Name;
        }
    }
#nullable restore

#nullable enable
    public partial class QuerySortOrderBuilder : QueryFramework.Abstractions.Builders.IQuerySortOrderBuilder
    {
        public QueryFramework.Abstractions.Builders.IQueryExpressionBuilder Field
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.QuerySortOrderDirection Order
        {
            get;
            set;
        }

        public QueryFramework.Abstractions.IQuerySortOrder Build()
        {
            return new QueryFramework.Core.QuerySortOrder(Field.Build(), Order);
        }

        public QuerySortOrderBuilder WithField(QueryFramework.Abstractions.Builders.IQueryExpressionBuilder field)
        {
            Field = field;
            return this;
        }

        public QuerySortOrderBuilder WithOrder(QueryFramework.Abstractions.QuerySortOrderDirection order)
        {
            Order = order;
            return this;
        }

        public QuerySortOrderBuilder()
        {
            Field = new QueryFramework.Core.Builders.QueryExpressionBuilder();
            Order = default;
        }

        public QuerySortOrderBuilder(QueryFramework.Abstractions.IQuerySortOrder source)
        {
            Field = new QueryFramework.Core.Builders.QueryExpressionBuilder(source.Field);
            Order = source.Order;
        }
    }
#nullable restore
}
