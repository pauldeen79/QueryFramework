// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 6.0.2
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ExpressionFramework.Core.DomainModel
{
#nullable enable
    public partial record Condition : ExpressionFramework.Abstractions.DomainModel.ICondition
    {
        public ExpressionFramework.Abstractions.DomainModel.IExpression LeftExpression
        {
            get;
        }

        public ExpressionFramework.Abstractions.DomainModel.Domains.Operator Operator
        {
            get;
        }

        public ExpressionFramework.Abstractions.DomainModel.IExpression RightExpression
        {
            get;
        }

        public Condition(ExpressionFramework.Abstractions.DomainModel.IExpression leftExpression, ExpressionFramework.Abstractions.DomainModel.Domains.Operator @operator, ExpressionFramework.Abstractions.DomainModel.IExpression rightExpression)
        {
            this.LeftExpression = leftExpression;
            this.Operator = @operator;
            this.RightExpression = rightExpression;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ConstantExpression : ExpressionFramework.Abstractions.DomainModel.IConstantExpression
    {
        public object? Value
        {
            get;
        }

        public ExpressionFramework.Abstractions.DomainModel.IExpressionFunction? Function
        {
            get;
        }

        public ConstantExpression(object? value, ExpressionFramework.Abstractions.DomainModel.IExpressionFunction? function)
        {
            this.Value = value;
            this.Function = function;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record Expression : ExpressionFramework.Abstractions.DomainModel.IExpression
    {
        public ExpressionFramework.Abstractions.DomainModel.IExpressionFunction? Function
        {
            get;
        }

        public Expression(ExpressionFramework.Abstractions.DomainModel.IExpressionFunction? function)
        {
            this.Function = function;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record FieldExpression : ExpressionFramework.Abstractions.DomainModel.IFieldExpression
    {
        public string FieldName
        {
            get;
        }

        public ExpressionFramework.Abstractions.DomainModel.IExpressionFunction? Function
        {
            get;
        }

        public FieldExpression(string fieldName, ExpressionFramework.Abstractions.DomainModel.IExpressionFunction? function)
        {
            this.FieldName = fieldName;
            this.Function = function;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore
}
